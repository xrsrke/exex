# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/00_core.matter.ipynb.

# %% auto 0
__all__ = ['State', 'Matter']

# %% ../../nbs/00_core.matter.ipynb 4
from dataclasses import dataclass
from exex.imports import *
from exex.core.law import Law
from exex.core.system import System

# %% ../../nbs/00_core.matter.ipynb 6
@dataclass
class State:
    SOLID = "solid"
    LIQUID = "liquid"
    GAS = "gas"

# %% ../../nbs/00_core.matter.ipynb 8
class Matter(metaclass=PrePostInitMeta):
    def __init__(self):
        self._properties = dict()
        self._laws = dict()
        self._time: int = None
        self._t: int = None
        self._system = System()

    def __post_init__(self, *args, **kwargs):
        self._setup()

    def _setup_laws(
        self, laws: list[Law]
    ) -> None:  # add laws from `self.add_laws` to compound

        for law in laws:
            name = law.snake_name

            if not name in self.laws:
                law = law(compound=self)
                law._run_config()
                self._add_law(name, law)
    
    def _add_law(
        self,
        name: str, # name of law
        law: Law # law's class
    ) -> None:
        self._laws[name] = law

    def _setup(self) -> None:
        self._setup_laws(self.add_laws)

    def _set_system(self, system: System) -> None:  # set system
        self._system = system
    
    @property
    def system(self):
        return self._system

    @property
    def properties(self):
        return self._properties
    
    @property
    def laws(self):
        return self._laws

# %% ../../nbs/00_core.matter.ipynb 10
@patch
def set_time(
    self: Matter,
    t: int # time
): # set time
    self._t = t

# %% ../../nbs/00_core.matter.ipynb 14
@patch
@use_kwargs_dict(unit=None)
def get_prop(self: Matter, name: str, t: int, **kwargs):  # name  # time
    # if self.property_exists(args['name'])
    return self.system.get_prop(name, t, instance=self, **kwargs)

# %% ../../nbs/00_core.matter.ipynb 15
@patch
@use_kwargs_dict(unit=None)
def set_prop(self: Matter, name, val, t, **kwargs):
    return self.system.set_prop(name, val, t, instance=self, **kwargs)

# %% ../../nbs/00_core.matter.ipynb 16
@patch
def get_law(self: Matter, name, t, **kwargs):
    return self.system.get_law(name, t, instance=self, **kwargs)
