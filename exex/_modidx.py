# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/exex',
                'doc_host': 'https://xrsrke.github.io',
                'git_url': 'https://github.com/xrsrke/exex',
                'lib_path': 'exex'},
  'syms': { 'exex.basics': {},
            'exex.callback.core': { 'exex.callback.core.Callback': ('callback.core.html#callback', 'exex/callback/core.py'),
                                    'exex.callback.core.ConservationCallback': ( 'callback.core.html#conservationcallback',
                                                                                 'exex/callback/core.py')},
            'exex.compound.all': {},
            'exex.compound.core': { 'exex.compound.core.Compound': ('compound.core.html#compound', 'exex/compound/core.py'),
                                    'exex.compound.core.Compound.__init__': ( 'compound.core.html#compound.__init__',
                                                                              'exex/compound/core.py'),
                                    'exex.compound.core.Compound.__repr__': ( 'compound.core.html#compound.__repr__',
                                                                              'exex/compound/core.py'),
                                    'exex.compound.core.Compound.get_data': ( 'compound.core.html#compound.get_data',
                                                                              'exex/compound/core.py'),
                                    'exex.compound.core.Compound.info': ('compound.core.html#compound.info', 'exex/compound/core.py'),
                                    'exex.compound.core.Compound.snake_name': ( 'compound.core.html#compound.snake_name',
                                                                                'exex/compound/core.py')},
            'exex.compound.gas': { 'exex.compound.gas.AvogadroLaw': ('compound.gas.html#avogadrolaw', 'exex/compound/gas.py'),
                                   'exex.compound.gas.AvogadroLaw.__init__': ( 'compound.gas.html#avogadrolaw.__init__',
                                                                               'exex/compound/gas.py'),
                                   'exex.compound.gas.BoyleLaw': ('compound.gas.html#boylelaw', 'exex/compound/gas.py'),
                                   'exex.compound.gas.BoyleLaw.__init__': ('compound.gas.html#boylelaw.__init__', 'exex/compound/gas.py'),
                                   'exex.compound.gas.CharlesLaw': ('compound.gas.html#charleslaw', 'exex/compound/gas.py'),
                                   'exex.compound.gas.CharlesLaw.__init__': ( 'compound.gas.html#charleslaw.__init__',
                                                                              'exex/compound/gas.py'),
                                   'exex.compound.gas.Gas': ('compound.gas.html#gas', 'exex/compound/gas.py'),
                                   'exex.compound.gas.Gas.__init__': ('compound.gas.html#gas.__init__', 'exex/compound/gas.py'),
                                   'exex.compound.gas.IdealGasConstant': ('compound.gas.html#idealgasconstant', 'exex/compound/gas.py'),
                                   'exex.compound.gas.IdealGasConstant.__init__': ( 'compound.gas.html#idealgasconstant.__init__',
                                                                                    'exex/compound/gas.py'),
                                   'exex.compound.gas.IdealGasLaw': ('compound.gas.html#idealgaslaw', 'exex/compound/gas.py'),
                                   'exex.compound.gas.IdealGasLaw.__init__': ( 'compound.gas.html#idealgaslaw.__init__',
                                                                               'exex/compound/gas.py'),
                                   'exex.compound.gas.IdealGasLaw.expression': ( 'compound.gas.html#idealgaslaw.expression',
                                                                                 'exex/compound/gas.py'),
                                   'exex.compound.gas.IsIdealGas': ('compound.gas.html#isidealgas', 'exex/compound/gas.py'),
                                   'exex.compound.gas.IsIdealGas.__bool__': ( 'compound.gas.html#isidealgas.__bool__',
                                                                              'exex/compound/gas.py'),
                                   'exex.compound.gas.IsIdealGas.__init__': ( 'compound.gas.html#isidealgas.__init__',
                                                                              'exex/compound/gas.py'),
                                   'exex.compound.gas.State': ('compound.gas.html#state', 'exex/compound/gas.py'),
                                   'exex.compound.gas.State.__bool__': ('compound.gas.html#state.__bool__', 'exex/compound/gas.py'),
                                   'exex.compound.gas.State.__init__': ('compound.gas.html#state.__init__', 'exex/compound/gas.py')},
            'exex.compound.law': { 'exex.compound.law.MassMoleRatio': ('compound.law.html#massmoleratio', 'exex/compound/law.py'),
                                   'exex.compound.law.MassMoleRatio.__init__': ( 'compound.law.html#massmoleratio.__init__',
                                                                                 'exex/compound/law.py'),
                                   'exex.compound.law.MassMoleRatio.expr': ( 'compound.law.html#massmoleratio.expr',
                                                                             'exex/compound/law.py')},
            'exex.compound.property': { 'exex.compound.property.Mass': ('compound.property.html#mass', 'exex/compound/property.py'),
                                        'exex.compound.property.Mass.__init__': ( 'compound.property.html#mass.__init__',
                                                                                  'exex/compound/property.py'),
                                        'exex.compound.property.MolarMass': ( 'compound.property.html#molarmass',
                                                                              'exex/compound/property.py'),
                                        'exex.compound.property.MolarMass.__init__': ( 'compound.property.html#molarmass.__init__',
                                                                                       'exex/compound/property.py'),
                                        'exex.compound.property.MolarMass.compute': ( 'compound.property.html#molarmass.compute',
                                                                                      'exex/compound/property.py'),
                                        'exex.compound.property.Mole': ('compound.property.html#mole', 'exex/compound/property.py'),
                                        'exex.compound.property.Mole.__init__': ( 'compound.property.html#mole.__init__',
                                                                                  'exex/compound/property.py'),
                                        'exex.compound.property.Pressure': ('compound.property.html#pressure', 'exex/compound/property.py'),
                                        'exex.compound.property.Pressure.__init__': ( 'compound.property.html#pressure.__init__',
                                                                                      'exex/compound/property.py'),
                                        'exex.compound.property.Temperature': ( 'compound.property.html#temperature',
                                                                                'exex/compound/property.py'),
                                        'exex.compound.property.Temperature.__init__': ( 'compound.property.html#temperature.__init__',
                                                                                         'exex/compound/property.py'),
                                        'exex.compound.property.Volume': ('compound.property.html#volume', 'exex/compound/property.py'),
                                        'exex.compound.property.Volume.__init__': ( 'compound.property.html#volume.__init__',
                                                                                    'exex/compound/property.py')},
            'exex.core.all': {},
            'exex.core.event': { 'exex.core.event.Event': ('core.event.html#event', 'exex/core/event.py'),
                                 'exex.core.event.Event.__call__': ('core.event.html#event.__call__', 'exex/core/event.py')},
            'exex.core.law': { 'exex.core.law.BaseLaw': ('core.law.html#baselaw', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.__call__': ('core.law.html#baselaw.__call__', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.__repr__': ('core.law.html#baselaw.__repr__', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw._config_properties': ('core.law.html#baselaw._config_properties', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw._run_config': ('core.law.html#baselaw._run_config', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.expr': ('core.law.html#baselaw.expr', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.is_solveable': ('core.law.html#baselaw.is_solveable', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.n_known_variables': ('core.law.html#baselaw.n_known_variables', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.name': ('core.law.html#baselaw.name', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.snake_name': ('core.law.html#baselaw.snake_name', 'exex/core/law.py'),
                               'exex.core.law.BaseLaw.solve': ('core.law.html#baselaw.solve', 'exex/core/law.py'),
                               'exex.core.law.Law': ('core.law.html#law', 'exex/core/law.py')},
            'exex.core.matter': { 'exex.core.matter.Matter': ('core.matter.html#matter', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.__init__': ('core.matter.html#matter.__init__', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.__post_init__': ('core.matter.html#matter.__post_init__', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter._set_system': ('core.matter.html#matter._set_system', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter._setup': ('core.matter.html#matter._setup', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter._setup_laws': ('core.matter.html#matter._setup_laws', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.get_law': ('core.matter.html#matter.get_law', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.get_prop': ('core.matter.html#matter.get_prop', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.get_system': ('core.matter.html#matter.get_system', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.set_prop': ('core.matter.html#matter.set_prop', 'exex/core/matter.py'),
                                  'exex.core.matter.Matter.set_time': ('core.matter.html#matter.set_time', 'exex/core/matter.py'),
                                  'exex.core.matter.State': ('core.matter.html#state', 'exex/core/matter.py')},
            'exex.core.property': { 'exex.core.property.BaseProperty': ('core.property.html#baseproperty', 'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.__call__': ( 'core.property.html#baseproperty.__call__',
                                                                                  'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.__init__': ( 'core.property.html#baseproperty.__init__',
                                                                                  'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.add_law': ( 'core.property.html#baseproperty.add_law',
                                                                                 'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.eval': ( 'core.property.html#baseproperty.eval',
                                                                              'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.expr': ( 'core.property.html#baseproperty.expr',
                                                                              'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.get_val': ( 'core.property.html#baseproperty.get_val',
                                                                                 'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.is_empty': ( 'core.property.html#baseproperty.is_empty',
                                                                                  'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.name': ( 'core.property.html#baseproperty.name',
                                                                              'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.set_val': ( 'core.property.html#baseproperty.set_val',
                                                                                 'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.snake_name': ( 'core.property.html#baseproperty.snake_name',
                                                                                    'exex/core/property.py'),
                                    'exex.core.property.BaseProperty.symbol': ( 'core.property.html#baseproperty.symbol',
                                                                                'exex/core/property.py'),
                                    'exex.core.property.ConstantProperty': ('core.property.html#constantproperty', 'exex/core/property.py'),
                                    'exex.core.property.ConstantProperty.compute': ( 'core.property.html#constantproperty.compute',
                                                                                     'exex/core/property.py'),
                                    'exex.core.property.Object': ('core.property.html#object', 'exex/core/property.py'),
                                    'exex.core.property.Property': ('core.property.html#property', 'exex/core/property.py'),
                                    'exex.core.property.PropertyData': ('core.property.html#propertydata', 'exex/core/property.py'),
                                    'exex.core.property.PropertyObservable': ( 'core.property.html#propertyobservable',
                                                                               'exex/core/property.py')},
            'exex.core.symbolic': { 'exex.core.symbolic.Equation': ('core.symbolic.html#equation', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Function': ('core.symbolic.html#function', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Function.__new__': ('core.symbolic.html#function.__new__', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Symbol': ('core.symbolic.html#symbol', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Symbol.__new__': ('core.symbolic.html#symbol.__new__', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Symbol.data': ('core.symbolic.html#symbol.data', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Symbol.is_evaled': ('core.symbolic.html#symbol.is_evaled', 'exex/core/symbolic.py'),
                                    'exex.core.symbolic.Symbol.set_data': ('core.symbolic.html#symbol.set_data', 'exex/core/symbolic.py')},
            'exex.core.unit': { 'exex.core.unit.Unit': ('core.unit.html#unit', 'exex/core/unit.py'),
                                'exex.core.unit.unit2expr': ('core.unit.html#unit2expr', 'exex/core/unit.py')},
            'exex.core.universe': { 'exex.core.universe.Universe': ('core.universe.html#universe', 'exex/core/universe.py'),
                                    'exex.core.universe.Universe.__init__': ( 'core.universe.html#universe.__init__',
                                                                              'exex/core/universe.py')},
            'exex.environment': { 'exex.environment.ClosedContainer': ('environment.core.html#closedcontainer', 'exex/environment.py'),
                                  'exex.environment.Container': ('environment.core.html#container', 'exex/environment.py'),
                                  'exex.environment.Container.__init__': ( 'environment.core.html#container.__init__',
                                                                           'exex/environment.py'),
                                  'exex.environment.Environment': ('environment.core.html#environment', 'exex/environment.py'),
                                  'exex.environment.Environment.__init__': ( 'environment.core.html#environment.__init__',
                                                                             'exex/environment.py'),
                                  'exex.environment.OpenContainer': ('environment.core.html#opencontainer', 'exex/environment.py')},
            'exex.gas.all': {},
            'exex.gas.core': { 'exex.gas.core.AvogadroLaw': ('gas.core.html#avogadrolaw', 'exex/gas/core.py'),
                               'exex.gas.core.AvogadroLaw.__init__': ('gas.core.html#avogadrolaw.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.AvogadroLaw.expr': ('gas.core.html#avogadrolaw.expr', 'exex/gas/core.py'),
                               'exex.gas.core.BoyleLaw': ('gas.core.html#boylelaw', 'exex/gas/core.py'),
                               'exex.gas.core.BoyleLaw.__init__': ('gas.core.html#boylelaw.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.BoyleLaw.expr': ('gas.core.html#boylelaw.expr', 'exex/gas/core.py'),
                               'exex.gas.core.CharlesLaw': ('gas.core.html#charleslaw', 'exex/gas/core.py'),
                               'exex.gas.core.CharlesLaw.__init__': ('gas.core.html#charleslaw.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.CharlesLaw.expr': ('gas.core.html#charleslaw.expr', 'exex/gas/core.py'),
                               'exex.gas.core.Gas': ('gas.core.html#gas', 'exex/gas/core.py'),
                               'exex.gas.core.Gas.__init__': ('gas.core.html#gas.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.IdealGasConstant': ('gas.core.html#idealgasconstant', 'exex/gas/core.py'),
                               'exex.gas.core.IdealGasConstant.__init__': ('gas.core.html#idealgasconstant.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.IdealGasLaw': ('gas.core.html#idealgaslaw', 'exex/gas/core.py'),
                               'exex.gas.core.IdealGasLaw.__init__': ('gas.core.html#idealgaslaw.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.IdealGasLaw.expr': ('gas.core.html#idealgaslaw.expr', 'exex/gas/core.py'),
                               'exex.gas.core.IsIdealGas': ('gas.core.html#isidealgas', 'exex/gas/core.py'),
                               'exex.gas.core.IsIdealGas.__bool__': ('gas.core.html#isidealgas.__bool__', 'exex/gas/core.py'),
                               'exex.gas.core.IsIdealGas.__init__': ('gas.core.html#isidealgas.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.MoleFraction': ('gas.core.html#molefraction', 'exex/gas/core.py'),
                               'exex.gas.core.MoleFraction.__init__': ('gas.core.html#molefraction.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.PartialPressure': ('gas.core.html#partialpressure', 'exex/gas/core.py'),
                               'exex.gas.core.PartialPressure.__init__': ('gas.core.html#partialpressure.__init__', 'exex/gas/core.py'),
                               'exex.gas.core.State': ('gas.core.html#state', 'exex/gas/core.py'),
                               'exex.gas.core.State.__bool__': ('gas.core.html#state.__bool__', 'exex/gas/core.py'),
                               'exex.gas.core.State.__init__': ('gas.core.html#state.__init__', 'exex/gas/core.py')},
            'exex.gas.reaction': {'exex.gas.reaction.GasReaction': ('gas.reaction.html#gasreaction', 'exex/gas/reaction.py')},
            'exex.imports': {},
            'exex.our_universe': { 'exex.our_universe.ConservationOfElectricCharge': ( 'our_universe.html#conservationofelectriccharge',
                                                                                       'exex/our_universe.py'),
                                   'exex.our_universe.ConservationOfEnergy': ( 'our_universe.html#conservationofenergy',
                                                                               'exex/our_universe.py'),
                                   'exex.our_universe.ConservationOfMass': ('our_universe.html#conservationofmass', 'exex/our_universe.py'),
                                   'exex.our_universe.ConservationOfMass.__bool__': ( 'our_universe.html#conservationofmass.__bool__',
                                                                                      'exex/our_universe.py'),
                                   'exex.our_universe.ConservationOfMass.__init__': ( 'our_universe.html#conservationofmass.__init__',
                                                                                      'exex/our_universe.py'),
                                   'exex.our_universe.OurUniverse': ('our_universe.html#ouruniverse', 'exex/our_universe.py')},
            'exex.reaction.all': {},
            'exex.reaction.core': { 'exex.reaction.core.Reaction': ('reaction.core.html#reaction', 'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.__init__': ( 'reaction.core.html#reaction.__init__',
                                                                              'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.__repr__': ( 'reaction.core.html#reaction.__repr__',
                                                                              'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.balance': ('reaction.core.html#reaction.balance', 'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.coeffs': ('reaction.core.html#reaction.coeffs', 'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.compounds': ( 'reaction.core.html#reaction.compounds',
                                                                               'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.final_conditon': ( 'reaction.core.html#reaction.final_conditon',
                                                                                    'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.get_coeff': ( 'reaction.core.html#reaction.get_coeff',
                                                                               'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.initial_condition': ( 'reaction.core.html#reaction.initial_condition',
                                                                                       'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.products': ( 'reaction.core.html#reaction.products',
                                                                              'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.reactants': ( 'reaction.core.html#reaction.reactants',
                                                                               'exex/reaction/core.py'),
                                    'exex.reaction.core.Reaction.total_property': ( 'reaction.core.html#reaction.total_property',
                                                                                    'exex/reaction/core.py'),
                                    'exex.reaction.core.TotalProperty': ('reaction.core.html#totalproperty', 'exex/reaction/core.py'),
                                    'exex.reaction.core.TotalProperty.__init__': ( 'reaction.core.html#totalproperty.__init__',
                                                                                   'exex/reaction/core.py'),
                                    'exex.reaction.core.get_properties': ('reaction.core.html#get_properties', 'exex/reaction/core.py')},
            'exex.solver': {'exex.solver.Solver': ('solver.html#solver', 'exex/solver.py')},
            'exex.symbolic': { 'exex.symbolic.Equation': ('symbolic.html#equation', 'exex/symbolic.py'),
                               'exex.symbolic.Function': ('symbolic.html#function', 'exex/symbolic.py'),
                               'exex.symbolic.Function.__new__': ('symbolic.html#function.__new__', 'exex/symbolic.py'),
                               'exex.symbolic.Symbol': ('symbolic.html#symbol', 'exex/symbolic.py'),
                               'exex.symbolic.Symbol.__new__': ('symbolic.html#symbol.__new__', 'exex/symbolic.py'),
                               'exex.symbolic.Symbol.data': ('symbolic.html#symbol.data', 'exex/symbolic.py'),
                               'exex.symbolic.Symbol.set_data': ('symbolic.html#symbol.set_data', 'exex/symbolic.py')},
            'exex.system': { 'exex.system.System': ('system.html#system', 'exex/system.py'),
                             'exex.system.System.__init__': ('system.html#system.__init__', 'exex/system.py'),
                             'exex.system.System.__post_init__': ('system.html#system.__post_init__', 'exex/system.py'),
                             'exex.system.System._setup_reaction': ('system.html#system._setup_reaction', 'exex/system.py'),
                             'exex.system.System.get_coeff': ('system.html#system.get_coeff', 'exex/system.py'),
                             'exex.system.System.get_law': ('system.html#system.get_law', 'exex/system.py'),
                             'exex.system.System.get_prop': ('system.html#system.get_prop', 'exex/system.py'),
                             'exex.system.System.reaction': ('system.html#system.reaction', 'exex/system.py'),
                             'exex.system.System.set_prop': ('system.html#system.set_prop', 'exex/system.py')},
            'exex.universe': { 'exex.universe.Universe': ('core.universe.html#universe', 'exex/universe.py'),
                               'exex.universe.Universe.__init__': ('core.universe.html#universe.__init__', 'exex/universe.py')},
            'exex.utils': { 'exex.utils.camel_to_snake': ('utils.html#camel_to_snake', 'exex/utils.py'),
                            'exex.utils.fml2str': ('utils.html#fml2str', 'exex/utils.py'),
                            'exex.utils.snake_name': ('utils.html#snake_name', 'exex/utils.py'),
                            'exex.utils.str2fml': ('utils.html#str2fml', 'exex/utils.py')}}}