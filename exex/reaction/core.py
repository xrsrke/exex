# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/02_reaction.core.ipynb.

# %% auto 0
__all__ = ['Reaction']

# %% ../../nbs/02_reaction.core.ipynb 4
import chemlib
import pint
import pandas as pd
from fastcore.test import test_eq
from fastcore.basics import GetAttr, basic_repr

from ..system import System
from ..compound.core import *
from ..environment import Environment, OpenContainer

# %% ../../nbs/02_reaction.core.ipynb 5
class Reaction(GetAttr):
    _default = 'reaction'
    def __init__(
        self,
        reactants: list[Compound], # the list of reactants
        products: list[Compound] = [], # the list of products
        environment: Environment = OpenContainer() # the environment
    ) -> None:
        
        self.reaction = chemlib.Reaction(reactants=reactants, products=products)
        
        self.reactants = self.reaction.reactants
        self.products = self.reaction.products
        self.formula = self.reaction.formula
        self.system: System = System(reactions=[self])
        self.environment: Environment = environment
    
    def total_property(
        self,
        name: str # the name of the property
    ) -> list[float, float]: # the total property of reactants and products
        
        total_reactant = 0
        for reactant in self.reactants:
            if not name in reactant.properties: pass
            #total_reactant += reactant.properties[name]
            pass
        
        total_product = 0
    
        return total_reactant, total_product
    
    __repr__ = basic_repr('formula')
